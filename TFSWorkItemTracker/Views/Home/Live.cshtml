@{
    ViewBag.Title = "Live Monitor";
}

<h2>Live Monitor</h2>
<div id="AngularApp" ng-controller="mainCtrl">
    <!--This Div hold the Chat application, used to both communicate amongst the teams and post system notifications-->
    <div class="chatConsole">
        <div id="chatDiv" class="scrollable" style="height : 100px; overflow-y: auto;">
            <div ng-repeat="msg in messages">{{msg.message}}</div>
        </div>
        <div>
            <input ng-model="newMessage" ng-keypress="keyPress($event)" class="form-control input-sm pull-left" style="width:80%" type="text" placeholder="chat message" />
            <button ng-click="sendMessage()" class="pull-right btn btn-primary btn-sm">Send</button>
        </div>
    </div>
    
    <!--This Div holds the work items sent by the server-->
    <div id="workitemlist" class="col-xs-12">
        <div id="WorkItemProject" class="row">
            <h2>Filters</h2>
            <input id="SearchFilter" ng-model="search" class="form-control input-sm pull-left" style="width:80%" type="text" placeholder="filter" />
            <table class="table">
                <tr style="background-color:#00A4E4">
                    <th>ID</th>
                    <th>Collection</th>
                    <th>Team Project</th>
                    <th>State</th>
                    <th>Changed Date</th>
                    <th>Title</th>
                    <th><!--Button--></th>
                </tr>
                <tr ng-repeat-start="workitem in workitems | customFilter" ng-class-odd="'odd'" ng-class-even="'even'" ng-if="workitem.Toggler=='false'">
                    <td><a href="{{workitem.Uri}}">{{workitem.Id}}</a></td>
                    <td>{{workitem.Collection}}</td>
                    <td>{{workitem.Project}}</td>
                    <td>{{workitem.State}}</td>
                    <td>{{workitem.ChangedDate | date:'yyyy-MM-dd HH:mm:ss'}}</td>
                    <td>{{workitem.Title}}</td>
                    <td><button ng-click="toggleWorkItem(workitem.JsonId)" class="pull-right btn btn-primary btn-sm">Toggle</button></td>
                </tr>
                <tr ng-repeat-end class="toggled" ng-if="workitem.Toggler!='false'">
                    <td><a href="{{workitem.Uri}}">{{workitem.Id}}</a></td>
                    <td>{{workitem.Collection}}</td>
                    <td>{{workitem.Project}}</td>
                    <td>{{workitem.State}}</td>
                    <td>{{workitem.ChangedDate | date:'yyyy-MM-dd HH:mm:ss'}}</td>
                    <td>{{workitem.Title}}</td>
                    <td><button ng-click="toggleWorkItem(workitem.JsonId)" class="pull-right btn btn-primary btn-sm">{{workitem.Toggler}}</button></td>
                </tr>
            </table>
        </div>
    </div>
</div>
<style>
    .even{
        background-color: #EFF3FB;
    }

    .odd{
        background-color: white;
    }

    .toggled{
        background-color: red;
    }
</style>

@section scripts {
    <!--Script references. -->
    <!--AngualrJS used for dynamic UI updates-->
    <script src="~/Scripts/angular.js"></script>
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            ////Angular Section - Create the Application And Controler
            var app = angular.module('app', []).filter('customFilter', function () {
                var filter = document.getElementById("SearchFilter").value
                return function (items) { 
                    var filtered = [];
                    for (var item in items) {
                        for (var index in item) {
                            if (index.indexOf(filter) > -1) {
                                //String was found, return true
                                filtered.push(item);
                                break
                            }
                        }
                    }
                    return filtered;
                };
            }).controller('mainCtrl', function ($scope, chat) {
                $scope.messages = [];
                $scope.workitems = {};
                $scope.toggledworkitems = {};

                //Client Side

                //Filtermethod for finding text in associative array
                $scope.filterByText = function (workitem) {
                    for (var index in workitem) {
                        if (index.indexOf(search) > -1) {
                            //String was found, return true
                            return true;
                        }
                    }
                    return false;
                }

                //Allows for enter key to be used to send messages
                $scope.keyPress = function onKeyPress($event) {
                    //13 is the enter key
                    if ($event.keyCode == 13) {
                        $scope.sendMessage()
                    }
                };

                //Sends message to server
                $scope.sendMessage = function () {
                    chat.server.send($scope.newMessage);
                    $scope.newMessage = "";
                };

                $scope.toggleWorkItem = function (workitemjsonid) {
                    chat.server.toggle(workitemjsonid);
                };

                //Server Side

                //Adds a new message to chat window
                chat.client.newMessage = function onNewMessage(message) {
                    $scope.messages.push({ message: message });
                    $scope.$apply();
                    var chatDiv = document.getElementById("chatDiv");
                    chatDiv.scrollTop = chatDiv.scrollHeight;
                    console.log(message);
                };

                chat.client.addWorkItem = function onAddWorkItem(workitem) {
                    $scope.workitems[workitem.JsonId] = workitem;
                    $scope.$apply();
                    console.log(workitem);
                }

                chat.client.removeWorkItem = function onRemoveWorkItem(workitem) {
                    delete $scope.workitems[workitem.JsonId];
                    $scope.$apply();
                    console.log(workitem);
                }

                chat.client.updateWorkItem = function onUpdateWorkItem(workitem) {
                    $scope.workitems[workitem.JsonId] = workitem;
                    $scope.$apply();
                    console.log(workitem);
                }
            });
            
            // Start the connection.
            $.connection.hub.start();
                //Now that module is made, lets start it
            $.connection.hub.error(function (err) {
                console.log('An error occurred: ' + err);
            });
            //});
            // Start angular
            //Done Defining Angular
            angular.module('app').value('chat', $.connection.chat);
            angular.bootstrap(document, ['app']);
        });



        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}